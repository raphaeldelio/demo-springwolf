/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package demo.springwolf.model;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class AnotherPayload extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -5269509529728465486L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"AnotherPayload\",\"namespace\":\"demo.springwolf.model\",\"fields\":[{\"name\":\"foo\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"Some string field\",\"default\":null},{\"name\":\"ExamplePayload\",\"type\":{\"type\":\"record\",\"name\":\"ExamplePayload\",\"fields\":[{\"name\":\"someString\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"someLong\",\"type\":\"long\"}]}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<AnotherPayload> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<AnotherPayload> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<AnotherPayload> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<AnotherPayload> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<AnotherPayload> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this AnotherPayload to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a AnotherPayload from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a AnotherPayload instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static AnotherPayload fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  /** Some string field */
  private java.lang.String foo;
  private demo.springwolf.model.ExamplePayload ExamplePayload;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public AnotherPayload() {}

  /**
   * All-args constructor.
   * @param foo Some string field
   * @param ExamplePayload The new value for ExamplePayload
   */
  public AnotherPayload(java.lang.String foo, demo.springwolf.model.ExamplePayload ExamplePayload) {
    this.foo = foo;
    this.ExamplePayload = ExamplePayload;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return foo;
    case 1: return ExamplePayload;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: foo = value$ != null ? value$.toString() : null; break;
    case 1: ExamplePayload = (demo.springwolf.model.ExamplePayload)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'foo' field.
   * @return Some string field
   */
  public java.lang.String getFoo() {
    return foo;
  }



  /**
   * Gets the value of the 'ExamplePayload' field.
   * @return The value of the 'ExamplePayload' field.
   */
  public demo.springwolf.model.ExamplePayload getExamplePayload() {
    return ExamplePayload;
  }



  /**
   * Creates a new AnotherPayload RecordBuilder.
   * @return A new AnotherPayload RecordBuilder
   */
  public static demo.springwolf.model.AnotherPayload.Builder newBuilder() {
    return new demo.springwolf.model.AnotherPayload.Builder();
  }

  /**
   * Creates a new AnotherPayload RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new AnotherPayload RecordBuilder
   */
  public static demo.springwolf.model.AnotherPayload.Builder newBuilder(demo.springwolf.model.AnotherPayload.Builder other) {
    if (other == null) {
      return new demo.springwolf.model.AnotherPayload.Builder();
    } else {
      return new demo.springwolf.model.AnotherPayload.Builder(other);
    }
  }

  /**
   * Creates a new AnotherPayload RecordBuilder by copying an existing AnotherPayload instance.
   * @param other The existing instance to copy.
   * @return A new AnotherPayload RecordBuilder
   */
  public static demo.springwolf.model.AnotherPayload.Builder newBuilder(demo.springwolf.model.AnotherPayload other) {
    if (other == null) {
      return new demo.springwolf.model.AnotherPayload.Builder();
    } else {
      return new demo.springwolf.model.AnotherPayload.Builder(other);
    }
  }

  /**
   * RecordBuilder for AnotherPayload instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<AnotherPayload>
    implements org.apache.avro.data.RecordBuilder<AnotherPayload> {

    /** Some string field */
    private java.lang.String foo;
    private demo.springwolf.model.ExamplePayload ExamplePayload;
    private demo.springwolf.model.ExamplePayload.Builder ExamplePayloadBuilder;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(demo.springwolf.model.AnotherPayload.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.foo)) {
        this.foo = data().deepCopy(fields()[0].schema(), other.foo);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.ExamplePayload)) {
        this.ExamplePayload = data().deepCopy(fields()[1].schema(), other.ExamplePayload);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (other.hasExamplePayloadBuilder()) {
        this.ExamplePayloadBuilder = demo.springwolf.model.ExamplePayload.newBuilder(other.getExamplePayloadBuilder());
      }
    }

    /**
     * Creates a Builder by copying an existing AnotherPayload instance
     * @param other The existing instance to copy.
     */
    private Builder(demo.springwolf.model.AnotherPayload other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.foo)) {
        this.foo = data().deepCopy(fields()[0].schema(), other.foo);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.ExamplePayload)) {
        this.ExamplePayload = data().deepCopy(fields()[1].schema(), other.ExamplePayload);
        fieldSetFlags()[1] = true;
      }
      this.ExamplePayloadBuilder = null;
    }

    /**
      * Gets the value of the 'foo' field.
      * Some string field
      * @return The value.
      */
    public java.lang.String getFoo() {
      return foo;
    }


    /**
      * Sets the value of the 'foo' field.
      * Some string field
      * @param value The value of 'foo'.
      * @return This builder.
      */
    public demo.springwolf.model.AnotherPayload.Builder setFoo(java.lang.String value) {
      validate(fields()[0], value);
      this.foo = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'foo' field has been set.
      * Some string field
      * @return True if the 'foo' field has been set, false otherwise.
      */
    public boolean hasFoo() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'foo' field.
      * Some string field
      * @return This builder.
      */
    public demo.springwolf.model.AnotherPayload.Builder clearFoo() {
      foo = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'ExamplePayload' field.
      * @return The value.
      */
    public demo.springwolf.model.ExamplePayload getExamplePayload() {
      return ExamplePayload;
    }


    /**
      * Sets the value of the 'ExamplePayload' field.
      * @param value The value of 'ExamplePayload'.
      * @return This builder.
      */
    public demo.springwolf.model.AnotherPayload.Builder setExamplePayload(demo.springwolf.model.ExamplePayload value) {
      validate(fields()[1], value);
      this.ExamplePayloadBuilder = null;
      this.ExamplePayload = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'ExamplePayload' field has been set.
      * @return True if the 'ExamplePayload' field has been set, false otherwise.
      */
    public boolean hasExamplePayload() {
      return fieldSetFlags()[1];
    }

    /**
     * Gets the Builder instance for the 'ExamplePayload' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public demo.springwolf.model.ExamplePayload.Builder getExamplePayloadBuilder() {
      if (ExamplePayloadBuilder == null) {
        if (hasExamplePayload()) {
          setExamplePayloadBuilder(demo.springwolf.model.ExamplePayload.newBuilder(ExamplePayload));
        } else {
          setExamplePayloadBuilder(demo.springwolf.model.ExamplePayload.newBuilder());
        }
      }
      return ExamplePayloadBuilder;
    }

    /**
     * Sets the Builder instance for the 'ExamplePayload' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public demo.springwolf.model.AnotherPayload.Builder setExamplePayloadBuilder(demo.springwolf.model.ExamplePayload.Builder value) {
      clearExamplePayload();
      ExamplePayloadBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'ExamplePayload' field has an active Builder instance
     * @return True if the 'ExamplePayload' field has an active Builder instance
     */
    public boolean hasExamplePayloadBuilder() {
      return ExamplePayloadBuilder != null;
    }

    /**
      * Clears the value of the 'ExamplePayload' field.
      * @return This builder.
      */
    public demo.springwolf.model.AnotherPayload.Builder clearExamplePayload() {
      ExamplePayload = null;
      ExamplePayloadBuilder = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public AnotherPayload build() {
      try {
        AnotherPayload record = new AnotherPayload();
        record.foo = fieldSetFlags()[0] ? this.foo : (java.lang.String) defaultValue(fields()[0]);
        if (ExamplePayloadBuilder != null) {
          try {
            record.ExamplePayload = this.ExamplePayloadBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("ExamplePayload"));
            throw e;
          }
        } else {
          record.ExamplePayload = fieldSetFlags()[1] ? this.ExamplePayload : (demo.springwolf.model.ExamplePayload) defaultValue(fields()[1]);
        }
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<AnotherPayload>
    WRITER$ = (org.apache.avro.io.DatumWriter<AnotherPayload>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<AnotherPayload>
    READER$ = (org.apache.avro.io.DatumReader<AnotherPayload>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    if (this.foo == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.foo);
    }

    this.ExamplePayload.customEncode(out);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      if (in.readIndex() != 1) {
        in.readNull();
        this.foo = null;
      } else {
        this.foo = in.readString();
      }

      if (this.ExamplePayload == null) {
        this.ExamplePayload = new demo.springwolf.model.ExamplePayload();
      }
      this.ExamplePayload.customDecode(in);

    } else {
      for (int i = 0; i < 2; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          if (in.readIndex() != 1) {
            in.readNull();
            this.foo = null;
          } else {
            this.foo = in.readString();
          }
          break;

        case 1:
          if (this.ExamplePayload == null) {
            this.ExamplePayload = new demo.springwolf.model.ExamplePayload();
          }
          this.ExamplePayload.customDecode(in);
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










