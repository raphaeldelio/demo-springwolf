kafka:
  bootstrap:
    servers: localhost:29092

spring:
  application:
    name: My Demo
  kafka:
    bootstrap-servers: localhost:29092

    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
    properties:
      schema:
        registry:
          url: http://localhost:8081
      specific:
        avro:
          reader: true

springwolf:
  use-fqn: true
  docket:
    base-package: demo.springwolf
    default-content-type: application/vnd.apache.avro;version=1.9.0
    info:
      description: The documentation of my demo application
      title: ${spring.application.name}
      version: 1.0.0
    servers:
      local-kafka:
        protocol: kafka
        host: ${kafka.bootstrap.servers:localhost:29092}

  plugin:
    kafka:
      publishing:
        enabled: true
        producer:
          bootstrap-servers: ${kafka.bootstrap.servers:localhost:29092}
          key-serializer: org.apache.kafka.common.serialization.StringSerializer
          value-serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
          properties:
            key:
              serializer: org.apache.kafka.common.serialization.StringSerializer
            value:
              serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
            schema:
              registry:
                url: http://localhost:8081



